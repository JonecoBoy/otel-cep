version: '3.8'
services:
  tempbycep:
    build: tempByCep/.
    ports:
      - "8090:8090"
    security_opt:
      - seccomp:unconfined
  inputapp:
    build: inputApp/.
    ports:
      - "8091:8091"
    security_opt:
      - seccomp:unconfined
#  jaeger-all-in-one:
#    image: jaegertracing/all-in-one:latest
#    restart: always
#    ports:
#      - "16686:16686"
#      - "14268"
#      - "14250"
#    depends_on:
#      - otel-collector

  zipkin:
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"
    depends_on:
      - otel-collector

#  prometheus:
#    container_name: prometheus
#    image: prom/prometheus:latest
#    restart: always
#    volumes: #arquivo de config do prometeus
#      - ./.docker/prometheus.yaml:/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#    depends_on:
#      - otel-collector
  otel-collector: #colector do open telemtry rodando como servico
    image: otel/opentelemetry-collector:latest
    restart: always
    command: [ "--config=/etc/otel-collector-config.yaml" ] #parametro para ler o arquivo de config
    volumes:
      - ./.docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver porta principal que o coletor RECEBE, vai usar GRPC
      - "4318:4318"   # OTLP HTTP receiver porta principal que o coletor RECEBE, vai usar HTTP
      - "55679:55679" # zpages extension
#  grafana:
#    container_name: grafana
#    image: grafana/grafana:latest
#    restart: always
#    ports:
#      - "3000:3000"
#    depends_on:
#      - prometheus